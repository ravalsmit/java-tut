//4] class_object.java

// why class? 
     // Primitive data type : byte, short, int, long, float, double, char, boolean
     // Reference data type : String, Object, ArrayList, HashMap, etc. (class)
     
 // Class : is a description of an object's properties and behavior, and is a template for an object, which is an instance of a class.
     // Defining a category of data: class
     // Defining a category of behavior: method
     
// Object : is real world entity, and is an instance of a class, consumes momory and has properties and behavior.
     // Defining a category of object: instance of a class
     // Defining a category of properties: instance variable
     // Defining a category of behavior: instance method

class Box // class Box
{
     private int width, height, depth; // instance variables, or fields, or properties, or attributes, or data members.
     public void setDimensions(int w, int h, int d) // instance method, or method, or function, or procedure, or method.
        { width = w; height = h; depth = d;} // local variables, or variables, or parameters, or arguments.
     public void printDimensions() 
          {System.out.println("Width: " + width + " Height: " + height + " Depth: " + depth); }
} // end class Box

public class Example { // class, or class definition, or class declaration, or class definition.
    public static void main(String[] args) {
          // In C++ : (static) Box box; || (Dynamically) Box *p = new Box();
          // In Java : Box box = new Box(); (always generated by dynamic memory allocation)
          Box myBox = new Box(); // object, or instance, or instance of a class, or instance of a class definition.
          myBox.setDimensions(10, 20, 30); // method, or function, or procedure, or method call, or function call.
          myBox.printDimensions(); 
          Box yourBox = new Box(); // new object create and previous one get into the garbage collector.
          myBox.printDimensions(); 
    } // end main
} // end class class_object

// Output:
// Width: 10 Height: 20 Depth: 30
// Width: 0 Height: 0 Depth: 0